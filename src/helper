#!/bin/bash

uppers=ABCDEFGHIJKLMNOPQRSTUVWXYZ
lowers=abcdefghijklmnopqrstuvwxyz

join()
{
    local d=$1;
    shift;
    echo -n "$1";
    shift;
    printf "%s" "${@/#/$d}";
}

echoOK()
{
    echo -e "\e[32m[OK] $1: $2\e[0m"
}

echoNO()
{
    echo -e "\e[31m[NO] $1: $2\e[0m"
}

lowerCase(){
    i=0
    while ([ $i -lt ${#1} ]) do
        CUR=${1:$i:1}
        case $uppers in
            *$CUR*)CUR=${uppers%$CUR*};OUTPUT="${OUTPUT}${lowers:${#CUR}:1}";;
            *)OUTPUT="${OUTPUT}$CUR";;
        esac
        i=$((i+1))
    done
    echo "${OUTPUT}"
}

upperCase()
{
    i=0
    while ([ $i -lt ${#1} ]) do
        CUR=${1:$i:1}
        case $lowers in
            *$CUR*)CUR=${lowers%$CUR*};OUTPUT="${OUTPUT}${uppers:${#CUR}:1}";;
            *)OUTPUT="${OUTPUT}$CUR";;
        esac
        i=$((i+1))
    done
    echo "${OUTPUT}"
}

setValue()
{
    setVar=$2
    read -e -i "$setName" -p "Set $1 [$setVar]: " input
    setVar="${input:-$setVar}"

    sed -i "/^#.*$setVar/s/^#//" "$3"
    sed -i "/^;.*$setVar/s/^;//" "$3"
    sed -i "s/\($1* *\).*/\1$setVar/" "$3"
}

getValue()
{
    grep -Po "(?<=^$1 ).*" "$2"
}

##
# checkValue
#
# $1 - Value name
# $2 - Value bad
# $3 - File path
##
checkValue()
{
    local tmpVar=$(getValue "$1" "$3")

    if [ "$tmpVar" == "$2" ]; then
        echo 1
    else
        echo 0
    fi
}

##
# checkNotValue
#
# $1 - Value name
# $2 - Value bad
# $3 - File path
##
checkNotValue()
{
    local tmpVar=$(getValue "$1" "$3")

    if [ -z "$tmpVar" -a -z "${2// }" ] || [ "$tmpVar" != "$2" ]; then
        echo 1
    else
        echo 0
    fi
}


checkVerbose()
{
    local tmpVar=$(checkValue "$1" "$2" "$3")
    local getVar=$(getValue "$1" "$3")

    if [ "$tmpVar" == "1" ]; then
        echoOK "$1" "$getVar"
    else
        echoNO "$1" "$getVar"
    fi
}

checkNotVerbose()
{
    local tmpVar=$(checkNotValue "$1" "$2" "$3")
    local getVar=$(getValue "$1" "$3")

    if [ "$tmpVar" != "1" ]; then
        echoOK "$1" "$getVar"
    else
        echoNO "$1" "$getVar"
    fi
}

checkHost()
{
    local tmpVar=$(ping -c 1 "$1" 2>&1 | grep -c -E "(unknown|unreachable)")

    if [ "$tmpVar" -eq 0 ]; then
        echo 1
    else
        echo 0
    fi
}

checkAnswer()
{
    local yn=$1
    [ -z "$yn" ] && yn=y
    case $yn in
        [Yy]es|Y|y|I|i|1 ) echo 1  break;;
        [Nn]o|N|n|0      ) echo 0  break;;
        *                ) echo -1 break ;;
    esac;
}

checkAll()
{
    for file in $LIBFILES
    do
        local filebase=$(basename "$file")
        local filename="${filebase%.*}"

        "$filename::name"
        "$filename::check"
        echo;
    done;
}

checkOne()
{
    "$1::name"
    echo;
    if [ -n "$(type -t $1::$2)" ] && [ "$(type -t $1::$2)" = function ];
    then
        "$1::$2"
    else
        echo "$2 is unknown function";
    fi
}

checkCommand()
{
    if which "$1" >/dev/null; then
        echo 1
    else
        echo 0
    fi
}

checkInstalled()
{
    local tmpVar=$(dpkg-query -l $1 2>&1 | grep -c -E "(no packages)")

    if [ "$tmpVar" -eq 0 ]; then
        echo 1
    else
        echo 0
    fi
}
